[{"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/index.js":"1","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/App.js":"2","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Navbar.js":"3","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Landing.js":"4","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/auth/Register.js":"5","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/auth/Login.js":"6","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/store.js":"7","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/index.js":"8","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/alert.js":"9","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/types.js":"10","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/alert.js":"11","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Alert.js":"12","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/auth.js":"13","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/auth.js":"14","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/utils/setAuthToken.js":"15","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/Dashboard.js":"16","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/routing/PrivateRoute.js":"17","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/profile.js":"18","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/profile.js":"19","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Spinner.js":"20","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/CreateProfile.js":"21","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/DashboardActions.js":"22","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/Edit-profile.js":"23","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/AddExperience.js":"24","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/AddEducation.js":"25","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/Experience.js":"26","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/Education.js":"27"},{"size":146,"mtime":1612248126207,"results":"28","hashOfConfig":"29"},{"size":3254,"mtime":1612607979164,"results":"30","hashOfConfig":"29"},{"size":2752,"mtime":1612420149311,"results":"31","hashOfConfig":"29"},{"size":1169,"mtime":1612425874723,"results":"32","hashOfConfig":"29"},{"size":8645,"mtime":1612413155678,"results":"33","hashOfConfig":"29"},{"size":4821,"mtime":1612413011647,"results":"34","hashOfConfig":"29"},{"size":389,"mtime":1612326980957,"results":"35","hashOfConfig":"29"},{"size":202,"mtime":1612418777289,"results":"36","hashOfConfig":"29"},{"size":411,"mtime":1612328229692,"results":"37","hashOfConfig":"29"},{"size":612,"mtime":1612674363889,"results":"38","hashOfConfig":"29"},{"size":357,"mtime":1612336469249,"results":"39","hashOfConfig":"29"},{"size":703,"mtime":1612335910237,"results":"40","hashOfConfig":"29"},{"size":2273,"mtime":1612427326308,"results":"41","hashOfConfig":"29"},{"size":1283,"mtime":1612675334750,"results":"42","hashOfConfig":"29"},{"size":256,"mtime":1612342872475,"results":"43","hashOfConfig":"29"},{"size":2308,"mtime":1612676081489,"results":"44","hashOfConfig":"29"},{"size":691,"mtime":1612418501062,"results":"45","hashOfConfig":"29"},{"size":934,"mtime":1612600725970,"results":"46","hashOfConfig":"29"},{"size":5292,"mtime":1612675087263,"results":"47","hashOfConfig":"29"},{"size":314,"mtime":1612425823185,"results":"48","hashOfConfig":"29"},{"size":10621,"mtime":1612598808949,"results":"49","hashOfConfig":"29"},{"size":1479,"mtime":1612598421693,"results":"50","hashOfConfig":"29"},{"size":12015,"mtime":1612598824765,"results":"51","hashOfConfig":"29"},{"size":5210,"mtime":1612606458939,"results":"52","hashOfConfig":"29"},{"size":5219,"mtime":1612608574236,"results":"53","hashOfConfig":"29"},{"size":1852,"mtime":1612675520556,"results":"54","hashOfConfig":"29"},{"size":1790,"mtime":1612675790116,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"t9k1g5",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/index.js",[],["121","122"],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/App.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Navbar.js",["123"],"import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\nimport auth from '../../reducers/auth';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n    const authLinks = (\n        <ul className='navbar-nav ml-auto'>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/dashboard'>\n                    <i className='fas fa-user'></i>{' '}\n                    <span className='hide-sm'>Dashboard</span>\n                </Link>\n            </li>\n            <li className='nav-item'>\n                <Link onClick={logout} className='nav-link' to='#!'>\n                    <i className='fas fa-sign-out-alt'></i>{' '}\n                    <span className='hide-sm'>Logout</span>\n                </Link>\n            </li>\n        </ul>\n    );\n\n    const guestLinks = (\n        <ul className='navbar-nav ml-auto'>\n            <li className='nav-item'>\n                <Link className='nav-link' to='#!'>\n                    Developers\n                </Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/register'>\n                    Register\n                </Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/login'>\n                    Login\n                </Link>\n            </li>\n        </ul>\n    );\n\n    return (\n        <nav className='navbar navbar-expand-lg navbar-dark nav-bg'>\n            <Link className='navbar-brand brand-font' to='/'>\n                <i className='fas fa-code'></i> DevConnector\n            </Link>\n            <button\n                className='navbar-toggler'\n                type='button'\n                data-toggle='collapse'\n                data-target='#navbarSupportedContent'\n                aria-controls='navbarSupportedContent'\n                aria-expanded='false'\n                aria-label='Toggle navigation'\n            >\n                <span className='navbar-toggler-icon'></span>\n            </button>\n\n            <div\n                className='collapse navbar-collapse'\n                id='navbarSupportedContent'\n            >\n                {!loading && (\n                    <Fragment>\n                        {isAuthenticated ? authLinks : guestLinks}\n                    </Fragment>\n                )}\n            </div>\n        </nav>\n    );\n};\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Landing.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/auth/Register.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/auth/Login.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/store.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/index.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/alert.js",["124"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter((alert) => alert.id !== payload);\n        default:\n            return state;\n    }\n}\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/types.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/alert.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Alert.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/auth.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/auth.js",["125"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    ACCOUNT_DELETED,\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload,\n            };\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false,\n            };\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case ACCOUNT_DELETED:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n            };\n        default:\n            return state;\n    }\n}\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/utils/setAuthToken.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/Dashboard.js",["126"],"import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile } from '../../actions/profile';\nimport { deleteAccount } from '../../actions/profile';\n\nconst Dashboard = ({\n    getCurrentProfile,\n    deleteAccount,\n    auth: { user },\n    profile: { profile, loading },\n}) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, []);\n\n    return loading && profile === null ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n            <div class='dashboard-head'>\n                <div class='logo-dashboard'>\n                    <img class='logo-img' src='./images/icon.png' alt='logo' />\n                </div>\n                <h1 class='dashboard-heading'>Dashboard</h1>\n            </div>\n            {profile !== null ? (\n                <Fragment>\n                    <DashboardActions name={user && user.name} />\n                    <Experience experience={profile.experience} />\n                    <Education education={profile.education} />\n                    <button\n                        onClick={() => deleteAccount()}\n                        class='dashboard-delete-btn'\n                    >\n                        Delete My Account\n                    </button>\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <p>\n                        You have not yet setup a profile, please add some info\n                    </p>\n                    <Link to='/create-profile' className='btn btn-primary my-1'>\n                        Create Profile\n                    </Link>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    profile: state.profile,\n    deleteAccount: PropTypes.func.isRequired,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n    Dashboard\n);\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/routing/PrivateRoute.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/profile.js",["127"],"import {\n    CLEAR_PROFILE,\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n} from '../actions/types';\n\nconst initialState = {\n    profile: null,\n    profiles: [], //for list of developers\n    repos: [],\n    loading: true,\n    error: {},\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false,\n            };\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                repos: [],\n                loading: false,\n            };\n        default:\n            return state;\n    }\n}\n",["128","129"],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/profile.js",["130"],"import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    CLEAR_PROFILE,\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    ACCOUNT_DELETED,\n} from './types';\n\n// Get current user's profile\nexport const getCurrentProfile = () => async (dispatch) => {\n    try {\n        const res = await axios.get('/api/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Create or Update Profile\nexport const createProfile = (formData, history, edit = false) => async (\n    dispatch\n) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(\n            setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n        );\n\n        if (!edit) {\n            history.push('/dashboard');\n        }\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Add Experience\nexport const addExperience = (formData, history) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const res = await axios.put(\n            '/api/profile/experience',\n            formData,\n            config\n        );\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Experience Added Successfully', 'success'));\n\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Add education\nexport const addEducation = (formData, history) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const res = await axios.put('/api/profile/education', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Education Added Successfully', 'success'));\n\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Delete an Experience\nexport const deleteExperience = (id) => async (dispatch) => {\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Experience Removed Successfully', 'success'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n// Delete an Education\nexport const deleteEducation = (id) => async (dispatch) => {\n    try {\n        const res = await axios.delete(`/api/profile/education/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Education Removed Successfully', 'success'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Delete account and Profile\nexport const deleteAccount = () => async (dispatch) => {\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\n        try {\n            const res = await axios.delete('/api/profile');\n\n            dispatch({ type: CLEAR_PROFILE });\n            dispatch({ type: ACCOUNT_DELETED });\n\n            dispatch(setAlert('Your account has been permanently deleted'));\n        } catch (err) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: {\n                    msg: err.response.statusText,\n                    status: err.response.status,\n                },\n            });\n        }\n    }\n};\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Spinner.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/CreateProfile.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/DashboardActions.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/Edit-profile.js",["131"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom'; // withRouter for history\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n    profile: { profile, loading },\n    createProfile,\n    getCurrentProfile,\n    history,\n}) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        website: '',\n        location: '',\n        bio: '',\n        status: '',\n        githubusername: '',\n        skills: '',\n        youtube: '',\n        facebook: '',\n        twitter: '',\n        instagram: '',\n        linkedin: '',\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    useEffect(() => {\n        getCurrentProfile();\n\n        setFormData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            bio: loading || !profile.bio ? '' : profile.bio,\n            status: loading || !profile.status ? '' : profile.status,\n            githubusername:\n                loading || !profile.githubusername\n                    ? ''\n                    : profile.githubusername,\n            skills: loading || !profile.skills ? '' : profile.skills,\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\n            instagram:\n                loading || !profile.social ? '' : profile.social.instagram,\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n        });\n    }, [loading]);\n\n    const {\n        company,\n        website,\n        location,\n        bio,\n        status,\n        githubusername,\n        skills,\n        youtube,\n        facebook,\n        twitter,\n        instagram,\n        linkedin,\n    } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    };\n\n    return (\n        <Fragment>\n            <div className='create-prof-head'>\n                <div className='logo-dashboard'>\n                    <img\n                        className='logo-img'\n                        src='./images/icon.png'\n                        alt='logo'\n                    />\n                </div>\n                <h1 className='dashboard-heading'>Create Your Profile</h1>\n            </div>\n            <h3 className='create-prof-des'>\n                <i className='fas fa-user edu-icon'></i> Let's get some\n                information to make your profile stand out\n            </h3>\n\n            <form onSubmit={(e) => onSubmit(e)}>\n                <div className='add-education-div'>\n                    <small className='create-prof-small'>\n                        * = required field\n                    </small>\n                    <br />\n                    <select\n                        className='create-profile-dropdown'\n                        name='status'\n                        value={status}\n                        onChange={(e) => onChange(e)}\n                    >\n                        <option className='options' value='0'>\n                            * Select Professional Status\n                        </option>\n                        <option value='Developer'>Developer</option>\n                        <option value='Junior Developer'>\n                            Junior Developer\n                        </option>\n                        <option value='Senior Developer'>\n                            Senior Developer\n                        </option>\n                        <option value='Manager'>Manager</option>\n                        <option value='Student or Learning'>\n                            Student or Learning\n                        </option>\n                        <option value='Instructor'>\n                            Instructor or Teacher\n                        </option>\n                        <option value='Intern'>Intern</option>\n                        <option value='Other'>Other</option>\n                    </select>\n                    <small className='create-prof-small'>\n                        Give us an idea of where you are at in your career\n                    </small>\n                    <input\n                        className='create-prof-input'\n                        type='text'\n                        placeholder='Company'\n                        name='company'\n                        value={company}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <small className='create-prof-small'>\n                        Could be your own company or one you work for\n                    </small>\n                    <input\n                        className='create-prof-input'\n                        type='text'\n                        placeholder='Website'\n                        name='website'\n                        value={website}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <small className='create-prof-small'>\n                        Could be your own or a company website\n                    </small>\n                    <input\n                        className='create-prof-input'\n                        type='text'\n                        placeholder='Location'\n                        name='location'\n                        value={location}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <small className='create-prof-small'>\n                        City & state suggested (eg. Boston, MA)\n                    </small>\n                    <input\n                        className='create-prof-input'\n                        type='text'\n                        placeholder='* Skills'\n                        name='skills'\n                        value={skills}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <small className='create-prof-small'>\n                        Please use comma separated values\n                        (eg.HTML,CSS,JavaScript,PHP)\n                    </small>\n                    <input\n                        className='create-prof-input'\n                        type='text'\n                        placeholder='Github Username'\n                        name='githubusername'\n                        value={githubusername}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <small className='create-prof-small'>\n                        If you want your latest repos and a Github link, include\n                        your username\n                    </small>\n                    <textarea\n                        className='create-prof-input'\n                        placeholder='A short bio of yourself'\n                        name='bio'\n                        value={bio}\n                        onChange={(e) => onChange(e)}\n                    ></textarea>\n                    <small className='create-prof-small'>\n                        Tell us a little about yourself\n                    </small>\n                </div>\n\n                <div className='create-prof-mid'>\n                    <button\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\n                        className='create-prof-social-btn'\n                        type='button'\n                    >\n                        Add Social Network Links\n                    </button>\n                    <span className='create-prof-span'>Optional</span>\n                </div>\n\n                {displaySocialInputs && (\n                    <Fragment>\n                        <div className='add-education-div'>\n                            <div className='create-prof-social'>\n                                <i className='fab fa-twitter fa-2x social-icon'></i>\n                                <input\n                                    className='create-prof-social-input'\n                                    type='text'\n                                    placeholder='Twitter URL'\n                                    name='twitter'\n                                    value={twitter}\n                                    onChange={(e) => onChange(e)}\n                                />\n                            </div>\n\n                            <div className='create-prof-social'>\n                                <i className='fab fa-facebook fa-2x social-icon'></i>\n                                <input\n                                    className='create-prof-social-input'\n                                    type='text'\n                                    placeholder='Facebook URL'\n                                    name='facebook'\n                                    value={facebook}\n                                    onChange={(e) => onChange(e)}\n                                />\n                            </div>\n\n                            <div className='create-prof-social'>\n                                <i className='fab fa-youtube fa-2x social-icon'></i>\n                                <input\n                                    className='create-prof-social-input'\n                                    type='text'\n                                    placeholder='YouTube URL'\n                                    name='youtube'\n                                    value={youtube}\n                                    onChange={(e) => onChange(e)}\n                                />\n                            </div>\n\n                            <div className='create-prof-social'>\n                                <i className='fab fa-linkedin fa-2x social-icon'></i>\n                                <input\n                                    className='create-prof-social-input'\n                                    type='text'\n                                    placeholder='Linkedin URL'\n                                    name='linkedin'\n                                    value={linkedin}\n                                    onChange={(e) => onChange(e)}\n                                />\n                            </div>\n\n                            <div className='create-prof-social'>\n                                <i className='fab fa-instagram fa-2x social-icon'></i>\n                                <input\n                                    className='create-prof-social-input'\n                                    type='text'\n                                    placeholder='Instagram URL'\n                                    name='instagram'\n                                    value={instagram}\n                                    onChange={(e) => onChange(e)}\n                                />\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n\n                <div className='create-prof-button-div'>\n                    <input type='submit' className='add-edu-btn' />\n                    <Link to='/dashboard'>\n                        <button className='add-edu-btn-back'>Go Back</button>\n                    </Link>\n                </div>\n            </form>\n        </Fragment>\n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n    withRouter(EditProfile)\n);\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/AddExperience.js",["132"],"import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: '',\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false); //if working there\n\n    const {\n        company,\n        title,\n        location,\n        from,\n        to,\n        current,\n        description,\n    } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    return (\n        <Fragment>\n            <div className='add-education-head'>\n                <div className='logo-dashboard'>\n                    <img\n                        className='logo-img'\n                        src='./images/icon.png'\n                        alt='logo'\n                    />\n                </div>\n                <h1 className='dashboard-heading'>Add An Experience</h1>\n            </div>\n            <h3 className='add-education-des add-exp-des'>\n                <i className='fas fa-code-branch'></i> Add any\n                developer/programming positions that you have had in the past\n            </h3>\n\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    addExperience(formData, history);\n                }}\n            >\n                <div className='add-education-div'>\n                    <small>* = required field</small>\n                    <br />\n                    <input\n                        className='add-education-input'\n                        type='text'\n                        placeholder='* Job Title'\n                        name='title'\n                        value={title}\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                    <input\n                        className='add-education-input'\n                        type='text'\n                        placeholder='* Company'\n                        name='company'\n                        value={company}\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                    <input\n                        className='add-education-input'\n                        type='text'\n                        placeholder='Location'\n                        value={location}\n                        onChange={(e) => onChange(e)}\n                        name='location'\n                    />\n                    <h5>From Date</h5>\n                    <input\n                        className='add-education-input'\n                        type='date'\n                        name='from'\n                        value={from}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <label className='add-education-label'>\n                        <input\n                            className='add-education-checkbox'\n                            name='current'\n                            type='checkbox'\n                            value={current}\n                            checked={current}\n                            onChange={(e) => {\n                                setFormData({ ...formData, current: !current });\n                                toggleDisabled(!toDateDisabled);\n                            }}\n                        />\n                        <i\n                            className='fa-class fa fa-check'\n                            aria-hidden='true'\n                        ></i>\n                        <h5 className='add-edu-checkbox-des'>Current Job</h5>\n                    </label>\n                    <h5>To Date</h5>\n                    <input\n                        className='add-education-input'\n                        type='date'\n                        name='to'\n                        value={to}\n                        onChange={(e) => onChange(e)}\n                        disabled={toDateDisabled ? 'disabled' : ''}\n                    />\n                    <div className='add-edu-textarea'>\n                        <textarea\n                            name='description'\n                            cols='30'\n                            rows='5'\n                            placeholder='Job Description'\n                            value={description}\n                            onChange={(e) => onChange(e)}\n                        ></textarea>\n                    </div>\n                    <input type='submit' className='add-edu-btn' />\n                    <Link to='/dashboard'>\n                        <button className='add-edu-btn-back'>Go Back</button>\n                    </Link>\n                </div>\n            </form>\n        </Fragment>\n    );\n};\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(AddExperience);\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/AddEducation.js",["133"],"import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n    const [formData, setFormData] = useState({\n        school: '',\n        degree: '',\n        fieldofstudy: '',\n        from: '',\n        to: '',\n        current: false,\n        description: '',\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const {\n        school,\n        degree,\n        fieldofstudy,\n        from,\n        to,\n        current,\n        description,\n    } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    return (\n        <Fragment>\n            <div className='add-education-head'>\n                <div className='logo-dashboard'>\n                    <img\n                        className='logo-img'\n                        src='./images/icon.png'\n                        alt='logo'\n                    />\n                </div>\n                <h1 className='dashboard-heading'>Add Your Education</h1>\n            </div>\n            <h3 className='add-education-des'>\n                <i className='fas fa-graduation-cap edu-icon'></i>\n                Add any school, bootcamp, etc that you have attended\n            </h3>\n\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    addEducation(formData, history);\n                }}\n            >\n                <div className='add-education-div'>\n                    <small>* = required field</small>\n                    <br />\n                    <input\n                        className='add-education-input'\n                        name='school'\n                        type='text'\n                        placeholder='* School or Bootcamp'\n                        value={school}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <input\n                        className='add-education-input'\n                        name='degree'\n                        type='text'\n                        placeholder='* Degree or Certificate'\n                        value={degree}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <input\n                        className='add-education-input'\n                        name='fieldofstudy'\n                        type='text'\n                        placeholder='Field Of Study'\n                        value={fieldofstudy}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <h5>From Date</h5>\n                    <input\n                        className='add-education-input'\n                        type='date'\n                        name='from'\n                        value={from}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <label className='add-education-label'>\n                        <input\n                            className='add-education-checkbox'\n                            name='current'\n                            type='checkbox'\n                            value={current}\n                            checked={current}\n                            onChange={(e) => {\n                                setFormData({ ...formData, current: !current });\n                                toggleDisabled(!toDateDisabled);\n                            }}\n                        />\n                        <i\n                            className='fa-class fa fa-check'\n                            aria-hidden='true'\n                        ></i>\n                        <h5 className='add-edu-checkbox-des'>\n                            Current School or Bootcamp\n                        </h5>\n                    </label>\n                    <h5>To Date</h5>\n                    <input\n                        className='add-education-input'\n                        type='date'\n                        name='to'\n                        value={to}\n                        onChange={(e) => onChange(e)}\n                        disabled={toDateDisabled ? 'disabled' : ''}\n                    />\n                    <div className='add-edu-textarea'>\n                        <textarea\n                            name='description'\n                            cols='30'\n                            rows='5'\n                            placeholder='Program Description'\n                            value={description}\n                            onChange={(e) => onChange(e)}\n                        ></textarea>\n                    </div>\n                    <input type='submit' className='add-edu-btn' />\n                    <Link to='/dashboard'>\n                        <button className='add-edu-btn-back'>Go Back</button>\n                    </Link>\n                </div>\n            </form>\n        </Fragment>\n    );\n};\n\nAddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(AddEducation);\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/Experience.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/Education.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":12},{"ruleId":"142","severity":1,"message":"143","line":5,"column":1,"nodeType":"144","endLine":16,"endColumn":2},{"ruleId":"142","severity":1,"message":"143","line":19,"column":1,"nodeType":"144","endLine":54,"endColumn":2},{"ruleId":"145","severity":1,"message":"146","line":20,"column":8,"nodeType":"147","endLine":20,"endColumn":10,"suggestions":"148"},{"ruleId":"142","severity":1,"message":"143","line":16,"column":1,"nodeType":"144","endLine":43,"endColumn":2},{"ruleId":"134","replacedBy":"149"},{"ruleId":"136","replacedBy":"150"},{"ruleId":"138","severity":1,"message":"151","line":197,"column":19,"nodeType":"140","messageId":"141","endLine":197,"endColumn":22},{"ruleId":"145","severity":1,"message":"152","line":51,"column":8,"nodeType":"147","endLine":51,"endColumn":17,"suggestions":"153"},{"ruleId":"138","severity":1,"message":"154","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":26},{"ruleId":"138","severity":1,"message":"154","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":26},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["157"],["155"],["156"],"'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["158"],"'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"163","text":"164"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"165","text":"166"},[635,637],"[getCurrentProfile]",[1883,1892],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]