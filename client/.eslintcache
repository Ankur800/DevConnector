[{"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/index.js":"1","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/App.js":"2","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Navbar.js":"3","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Landing.js":"4","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/auth/Register.js":"5","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/auth/Login.js":"6","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/store.js":"7","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/index.js":"8","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/alert.js":"9","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/types.js":"10","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/alert.js":"11","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Alert.js":"12","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/auth.js":"13","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/auth.js":"14","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/utils/setAuthToken.js":"15","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/Dashboard.js":"16","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/routing/PrivateRoute.js":"17","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/profile.js":"18","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/profile.js":"19","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Spinner.js":"20","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/CreateProfile.js":"21","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/DashboardActions.js":"22","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/Edit-profile.js":"23","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/AddExperience.js":"24","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/AddEducation.js":"25"},{"size":146,"mtime":1612248126207,"results":"26","hashOfConfig":"27"},{"size":3254,"mtime":1612607979164,"results":"28","hashOfConfig":"27"},{"size":2752,"mtime":1612420149311,"results":"29","hashOfConfig":"27"},{"size":1169,"mtime":1612425874723,"results":"30","hashOfConfig":"27"},{"size":8645,"mtime":1612413155678,"results":"31","hashOfConfig":"27"},{"size":4821,"mtime":1612413011647,"results":"32","hashOfConfig":"27"},{"size":389,"mtime":1612326980957,"results":"33","hashOfConfig":"27"},{"size":202,"mtime":1612418777289,"results":"34","hashOfConfig":"27"},{"size":411,"mtime":1612328229692,"results":"35","hashOfConfig":"27"},{"size":562,"mtime":1612599385808,"results":"36","hashOfConfig":"27"},{"size":357,"mtime":1612336469249,"results":"37","hashOfConfig":"27"},{"size":703,"mtime":1612335910237,"results":"38","hashOfConfig":"27"},{"size":2273,"mtime":1612427326308,"results":"39","hashOfConfig":"27"},{"size":1232,"mtime":1612413487985,"results":"40","hashOfConfig":"27"},{"size":256,"mtime":1612342872475,"results":"41","hashOfConfig":"27"},{"size":1729,"mtime":1612598304693,"results":"42","hashOfConfig":"27"},{"size":691,"mtime":1612418501062,"results":"43","hashOfConfig":"27"},{"size":934,"mtime":1612600725970,"results":"44","hashOfConfig":"27"},{"size":3448,"mtime":1612600650775,"results":"45","hashOfConfig":"27"},{"size":314,"mtime":1612425823185,"results":"46","hashOfConfig":"27"},{"size":10621,"mtime":1612598808949,"results":"47","hashOfConfig":"27"},{"size":1479,"mtime":1612598421693,"results":"48","hashOfConfig":"27"},{"size":12015,"mtime":1612598824765,"results":"49","hashOfConfig":"27"},{"size":5210,"mtime":1612606458939,"results":"50","hashOfConfig":"27"},{"size":5219,"mtime":1612608574236,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"t9k1g5",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/index.js",[],["108","109"],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/App.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Navbar.js",["110"],"import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\nimport auth from '../../reducers/auth';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n    const authLinks = (\n        <ul className='navbar-nav ml-auto'>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/dashboard'>\n                    <i className='fas fa-user'></i>{' '}\n                    <span className='hide-sm'>Dashboard</span>\n                </Link>\n            </li>\n            <li className='nav-item'>\n                <Link onClick={logout} className='nav-link' to='#!'>\n                    <i className='fas fa-sign-out-alt'></i>{' '}\n                    <span className='hide-sm'>Logout</span>\n                </Link>\n            </li>\n        </ul>\n    );\n\n    const guestLinks = (\n        <ul className='navbar-nav ml-auto'>\n            <li className='nav-item'>\n                <Link className='nav-link' to='#!'>\n                    Developers\n                </Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/register'>\n                    Register\n                </Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/login'>\n                    Login\n                </Link>\n            </li>\n        </ul>\n    );\n\n    return (\n        <nav className='navbar navbar-expand-lg navbar-dark nav-bg'>\n            <Link className='navbar-brand brand-font' to='/'>\n                <i className='fas fa-code'></i> DevConnector\n            </Link>\n            <button\n                className='navbar-toggler'\n                type='button'\n                data-toggle='collapse'\n                data-target='#navbarSupportedContent'\n                aria-controls='navbarSupportedContent'\n                aria-expanded='false'\n                aria-label='Toggle navigation'\n            >\n                <span className='navbar-toggler-icon'></span>\n            </button>\n\n            <div\n                className='collapse navbar-collapse'\n                id='navbarSupportedContent'\n            >\n                {!loading && (\n                    <Fragment>\n                        {isAuthenticated ? authLinks : guestLinks}\n                    </Fragment>\n                )}\n            </div>\n        </nav>\n    );\n};\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Landing.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/auth/Register.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/auth/Login.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/store.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/index.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/alert.js",["111"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter((alert) => alert.id !== payload);\n        default:\n            return state;\n    }\n}\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/types.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/alert.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Alert.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/auth.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/auth.js",["112"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload,\n            };\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false,\n            };\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n            };\n        default:\n            return state;\n    }\n}\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/utils/setAuthToken.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/Dashboard.js",["113"],"import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n    getCurrentProfile,\n    auth: { user },\n    profile: { profile, loading },\n}) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, []);\n\n    return loading && profile === null ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n            <div class='dashboard-head'>\n                <div class='logo-dashboard'>\n                    <img class='logo-img' src='./images/icon.png' alt='logo' />\n                </div>\n                <h1 class='dashboard-heading'>Dashboard</h1>\n            </div>\n            {profile !== null ? (\n                <Fragment>\n                    <DashboardActions name={user && user.name} />\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <p>\n                        You have not yet setup a profile, please add some info\n                    </p>\n                    <Link to='/create-profile' className='btn btn-primary my-1'>\n                        Create Profile\n                    </Link>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/routing/PrivateRoute.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/reducers/profile.js",["114"],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/actions/profile.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/layout/Spinner.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/CreateProfile.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/dashboard/DashboardActions.js",[],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/Edit-profile.js",["115"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom'; // withRouter for history\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n    profile: { profile, loading },\n    createProfile,\n    getCurrentProfile,\n    history,\n}) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        website: '',\n        location: '',\n        bio: '',\n        status: '',\n        githubusername: '',\n        skills: '',\n        youtube: '',\n        facebook: '',\n        twitter: '',\n        instagram: '',\n        linkedin: '',\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    useEffect(() => {\n        getCurrentProfile();\n\n        setFormData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            bio: loading || !profile.bio ? '' : profile.bio,\n            status: loading || !profile.status ? '' : profile.status,\n            githubusername:\n                loading || !profile.githubusername\n                    ? ''\n                    : profile.githubusername,\n            skills: loading || !profile.skills ? '' : profile.skills,\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\n            instagram:\n                loading || !profile.social ? '' : profile.social.instagram,\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n        });\n    }, [loading]);\n\n    const {\n        company,\n        website,\n        location,\n        bio,\n        status,\n        githubusername,\n        skills,\n        youtube,\n        facebook,\n        twitter,\n        instagram,\n        linkedin,\n    } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    };\n\n    return (\n        <Fragment>\n            <div className='create-prof-head'>\n                <div className='logo-dashboard'>\n                    <img\n                        className='logo-img'\n                        src='./images/icon.png'\n                        alt='logo'\n                    />\n                </div>\n                <h1 className='dashboard-heading'>Create Your Profile</h1>\n            </div>\n            <h3 className='create-prof-des'>\n                <i className='fas fa-user edu-icon'></i> Let's get some\n                information to make your profile stand out\n            </h3>\n\n            <form onSubmit={(e) => onSubmit(e)}>\n                <div className='add-education-div'>\n                    <small className='create-prof-small'>\n                        * = required field\n                    </small>\n                    <br />\n                    <select\n                        className='create-profile-dropdown'\n                        name='status'\n                        value={status}\n                        onChange={(e) => onChange(e)}\n                    >\n                        <option className='options' value='0'>\n                            * Select Professional Status\n                        </option>\n                        <option value='Developer'>Developer</option>\n                        <option value='Junior Developer'>\n                            Junior Developer\n                        </option>\n                        <option value='Senior Developer'>\n                            Senior Developer\n                        </option>\n                        <option value='Manager'>Manager</option>\n                        <option value='Student or Learning'>\n                            Student or Learning\n                        </option>\n                        <option value='Instructor'>\n                            Instructor or Teacher\n                        </option>\n                        <option value='Intern'>Intern</option>\n                        <option value='Other'>Other</option>\n                    </select>\n                    <small className='create-prof-small'>\n                        Give us an idea of where you are at in your career\n                    </small>\n                    <input\n                        className='create-prof-input'\n                        type='text'\n                        placeholder='Company'\n                        name='company'\n                        value={company}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <small className='create-prof-small'>\n                        Could be your own company or one you work for\n                    </small>\n                    <input\n                        className='create-prof-input'\n                        type='text'\n                        placeholder='Website'\n                        name='website'\n                        value={website}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <small className='create-prof-small'>\n                        Could be your own or a company website\n                    </small>\n                    <input\n                        className='create-prof-input'\n                        type='text'\n                        placeholder='Location'\n                        name='location'\n                        value={location}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <small className='create-prof-small'>\n                        City & state suggested (eg. Boston, MA)\n                    </small>\n                    <input\n                        className='create-prof-input'\n                        type='text'\n                        placeholder='* Skills'\n                        name='skills'\n                        value={skills}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <small className='create-prof-small'>\n                        Please use comma separated values\n                        (eg.HTML,CSS,JavaScript,PHP)\n                    </small>\n                    <input\n                        className='create-prof-input'\n                        type='text'\n                        placeholder='Github Username'\n                        name='githubusername'\n                        value={githubusername}\n                        onChange={(e) => onChange(e)}\n                    />\n                    <small className='create-prof-small'>\n                        If you want your latest repos and a Github link, include\n                        your username\n                    </small>\n                    <textarea\n                        className='create-prof-input'\n                        placeholder='A short bio of yourself'\n                        name='bio'\n                        value={bio}\n                        onChange={(e) => onChange(e)}\n                    ></textarea>\n                    <small className='create-prof-small'>\n                        Tell us a little about yourself\n                    </small>\n                </div>\n\n                <div className='create-prof-mid'>\n                    <button\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\n                        className='create-prof-social-btn'\n                        type='button'\n                    >\n                        Add Social Network Links\n                    </button>\n                    <span className='create-prof-span'>Optional</span>\n                </div>\n\n                {displaySocialInputs && (\n                    <Fragment>\n                        <div className='add-education-div'>\n                            <div className='create-prof-social'>\n                                <i className='fab fa-twitter fa-2x social-icon'></i>\n                                <input\n                                    className='create-prof-social-input'\n                                    type='text'\n                                    placeholder='Twitter URL'\n                                    name='twitter'\n                                    value={twitter}\n                                    onChange={(e) => onChange(e)}\n                                />\n                            </div>\n\n                            <div className='create-prof-social'>\n                                <i className='fab fa-facebook fa-2x social-icon'></i>\n                                <input\n                                    className='create-prof-social-input'\n                                    type='text'\n                                    placeholder='Facebook URL'\n                                    name='facebook'\n                                    value={facebook}\n                                    onChange={(e) => onChange(e)}\n                                />\n                            </div>\n\n                            <div className='create-prof-social'>\n                                <i className='fab fa-youtube fa-2x social-icon'></i>\n                                <input\n                                    className='create-prof-social-input'\n                                    type='text'\n                                    placeholder='YouTube URL'\n                                    name='youtube'\n                                    value={youtube}\n                                    onChange={(e) => onChange(e)}\n                                />\n                            </div>\n\n                            <div className='create-prof-social'>\n                                <i className='fab fa-linkedin fa-2x social-icon'></i>\n                                <input\n                                    className='create-prof-social-input'\n                                    type='text'\n                                    placeholder='Linkedin URL'\n                                    name='linkedin'\n                                    value={linkedin}\n                                    onChange={(e) => onChange(e)}\n                                />\n                            </div>\n\n                            <div className='create-prof-social'>\n                                <i className='fab fa-instagram fa-2x social-icon'></i>\n                                <input\n                                    className='create-prof-social-input'\n                                    type='text'\n                                    placeholder='Instagram URL'\n                                    name='instagram'\n                                    value={instagram}\n                                    onChange={(e) => onChange(e)}\n                                />\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n\n                <div className='create-prof-button-div'>\n                    <input type='submit' className='add-edu-btn' />\n                    <Link to='/dashboard'>\n                        <button className='add-edu-btn-back'>Go Back</button>\n                    </Link>\n                </div>\n            </form>\n        </Fragment>\n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n    withRouter(EditProfile)\n);\n","/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/AddExperience.js",["116"],"/home/ankur/FSD/MERN Stack/Projects/dev-com/client/src/components/profile-forms/AddEducation.js",["117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":12},{"ruleId":"126","severity":1,"message":"127","line":5,"column":1,"nodeType":"128","endLine":16,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":18,"column":1,"nodeType":"128","endLine":52,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":16,"column":8,"nodeType":"131","endLine":16,"endColumn":10,"suggestions":"132"},{"ruleId":"126","severity":1,"message":"127","line":16,"column":1,"nodeType":"128","endLine":43,"endColumn":2},{"ruleId":"129","severity":1,"message":"133","line":51,"column":8,"nodeType":"131","endLine":51,"endColumn":17,"suggestions":"134"},{"ruleId":"122","severity":1,"message":"135","line":2,"column":16,"nodeType":"124","messageId":"125","endLine":2,"endColumn":26},{"ruleId":"122","severity":1,"message":"135","line":2,"column":16,"nodeType":"124","messageId":"125","endLine":2,"endColumn":26},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["138"],"React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["139"],"'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"144","text":"145"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"146","text":"147"},[485,487],"[getCurrentProfile]",[1883,1892],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]